/**
 * Autogenerated by Thrift Compiler (0.13.0)
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */
package com.chxlay.thrift.generate;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2020-12-06")
public class Person implements org.apache.thrift.TBase<Person, Person._Fields>, java.io.Serializable, Cloneable, Comparable<Person> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Person");

    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.BYTE, (short) 1);
    private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short) 2);
    private static final org.apache.thrift.protocol.TField AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("age", org.apache.thrift.protocol.TType.I16, (short) 4);
    private static final org.apache.thrift.protocol.TField BIRTH_DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("birth_day", org.apache.thrift.protocol.TType.STRUCT, (short) 5);
    private static final org.apache.thrift.protocol.TField IS_DELETE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_delete", org.apache.thrift.protocol.TType.BOOL, (short) 6);
    private static final org.apache.thrift.protocol.TField CAR_FIELD_DESC = new org.apache.thrift.protocol.TField("car", org.apache.thrift.protocol.TType.LIST, (short) 7);
    private static final org.apache.thrift.protocol.TField PHONE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("phone_number", org.apache.thrift.protocol.TType.SET, (short) 8);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PersonStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PersonTupleSchemeFactory();

    public byte id; // required
    public @org.apache.thrift.annotation.Nullable
    java.lang.String name; // optional
    public short age; // optional
    public @org.apache.thrift.annotation.Nullable
    Date birth_day; // optional
    public boolean is_delete; // optional
    public @org.apache.thrift.annotation.Nullable
    java.util.List<java.lang.String> car; // optional
    public @org.apache.thrift.annotation.Nullable
    java.util.Set<java.lang.Long> phone_number; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        ID((short) 1, "id"),
        NAME((short) 2, "name"),
        AGE((short) 4, "age"),
        BIRTH_DAY((short) 5, "birth_day"),
        IS_DELETE((short) 6, "is_delete"),
        CAR((short) 7, "car"),
        PHONE_NUMBER((short) 8, "phone_number");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        @org.apache.thrift.annotation.Nullable
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
                case 1: // ID
                    return ID;
                case 2: // NAME
                    return NAME;
                case 4: // AGE
                    return AGE;
                case 5: // BIRTH_DAY
                    return BIRTH_DAY;
                case 6: // IS_DELETE
                    return IS_DELETE;
                case 7: // CAR
                    return CAR;
                case 8: // PHONE_NUMBER
                    return PHONE_NUMBER;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        @org.apache.thrift.annotation.Nullable
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private static final int __AGE_ISSET_ID = 1;
    private static final int __IS_DELETE_ISSET_ID = 2;
    private byte __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.NAME, _Fields.AGE, _Fields.BIRTH_DAY, _Fields.IS_DELETE, _Fields.CAR, _Fields.PHONE_NUMBER};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
        tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.AGE, new org.apache.thrift.meta_data.FieldMetaData("age", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.BIRTH_DAY, new org.apache.thrift.meta_data.FieldMetaData("birth_day", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT, "Date")));
        tmpMap.put(_Fields.IS_DELETE, new org.apache.thrift.meta_data.FieldMetaData("is_delete", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
        tmpMap.put(_Fields.CAR, new org.apache.thrift.meta_data.FieldMetaData("car", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
        tmpMap.put(_Fields.PHONE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("phone_number", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET,
                        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64, "long"))));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Person.class, metaDataMap);
    }

    public Person() {
    }

    public Person(
            byte id) {
        this();
        this.id = id;
        setIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public Person(Person other) {
        __isset_bitfield = other.__isset_bitfield;
        this.id = other.id;
        if (other.isSetName()) {
            this.name = other.name;
        }
        this.age = other.age;
        if (other.isSetBirth_day()) {
            this.birth_day = new Date(other.birth_day);
        }
        this.is_delete = other.is_delete;
        if (other.isSetCar()) {
            java.util.List<java.lang.String> __this__car = new java.util.ArrayList<java.lang.String>(other.car);
            this.car = __this__car;
        }
        if (other.isSetPhone_number()) {
            java.util.Set<java.lang.Long> __this__phone_number = new java.util.HashSet<java.lang.Long>(other.phone_number.size());
            for (java.lang.Long other_element : other.phone_number) {
                __this__phone_number.add(other_element);
            }
            this.phone_number = __this__phone_number;
        }
    }

    public Person deepCopy() {
        return new Person(this);
    }

    @Override
    public void clear() {
        setIdIsSet(false);
        this.id = 0;
        this.name = null;
        setAgeIsSet(false);
        this.age = 0;
        this.birth_day = null;
        setIs_deleteIsSet(false);
        this.is_delete = false;
        this.car = null;
        this.phone_number = null;
    }

    public byte getId() {
        return this.id;
    }

    public Person setId(byte id) {
        this.id = id;
        setIdIsSet(true);
        return this;
    }

    public void unsetId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getName() {
        return this.name;
    }

    public Person setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
        this.name = name;
        return this;
    }

    public void unsetName() {
        this.name = null;
    }

    /** Returns true if field name is set (has been assigned a value) and false otherwise */
    public boolean isSetName() {
        return this.name != null;
    }

    public void setNameIsSet(boolean value) {
        if (!value) {
            this.name = null;
        }
    }

    public short getAge() {
        return this.age;
    }

    public Person setAge(short age) {
        this.age = age;
        setAgeIsSet(true);
        return this;
    }

    public void unsetAge() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AGE_ISSET_ID);
    }

    /** Returns true if field age is set (has been assigned a value) and false otherwise */
    public boolean isSetAge() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AGE_ISSET_ID);
    }

    public void setAgeIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AGE_ISSET_ID, value);
    }

    @org.apache.thrift.annotation.Nullable
    public Date getBirth_day() {
        return this.birth_day;
    }

    public Person setBirth_day(@org.apache.thrift.annotation.Nullable Date birth_day) {
        this.birth_day = birth_day;
        return this;
    }

    public void unsetBirth_day() {
        this.birth_day = null;
    }

    /** Returns true if field birth_day is set (has been assigned a value) and false otherwise */
    public boolean isSetBirth_day() {
        return this.birth_day != null;
    }

    public void setBirth_dayIsSet(boolean value) {
        if (!value) {
            this.birth_day = null;
        }
    }

    public boolean isIs_delete() {
        return this.is_delete;
    }

    public Person setIs_delete(boolean is_delete) {
        this.is_delete = is_delete;
        setIs_deleteIsSet(true);
        return this;
    }

    public void unsetIs_delete() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_DELETE_ISSET_ID);
    }

    /** Returns true if field is_delete is set (has been assigned a value) and false otherwise */
    public boolean isSetIs_delete() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_DELETE_ISSET_ID);
    }

    public void setIs_deleteIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_DELETE_ISSET_ID, value);
    }

    public int getCarSize() {
        return (this.car == null) ? 0 : this.car.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<java.lang.String> getCarIterator() {
        return (this.car == null) ? null : this.car.iterator();
    }

    public void addToCar(java.lang.String elem) {
        if (this.car == null) {
            this.car = new java.util.ArrayList<java.lang.String>();
        }
        this.car.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<java.lang.String> getCar() {
        return this.car;
    }

    public Person setCar(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> car) {
        this.car = car;
        return this;
    }

    public void unsetCar() {
        this.car = null;
    }

    /** Returns true if field car is set (has been assigned a value) and false otherwise */
    public boolean isSetCar() {
        return this.car != null;
    }

    public void setCarIsSet(boolean value) {
        if (!value) {
            this.car = null;
        }
    }

    public int getPhone_numberSize() {
        return (this.phone_number == null) ? 0 : this.phone_number.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<java.lang.Long> getPhone_numberIterator() {
        return (this.phone_number == null) ? null : this.phone_number.iterator();
    }

    public void addToPhone_number(long elem) {
        if (this.phone_number == null) {
            this.phone_number = new java.util.HashSet<java.lang.Long>();
        }
        this.phone_number.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Set<java.lang.Long> getPhone_number() {
        return this.phone_number;
    }

    public Person setPhone_number(@org.apache.thrift.annotation.Nullable java.util.Set<java.lang.Long> phone_number) {
        this.phone_number = phone_number;
        return this;
    }

    public void unsetPhone_number() {
        this.phone_number = null;
    }

    /** Returns true if field phone_number is set (has been assigned a value) and false otherwise */
    public boolean isSetPhone_number() {
        return this.phone_number != null;
    }

    public void setPhone_numberIsSet(boolean value) {
        if (!value) {
            this.phone_number = null;
        }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
        switch (field) {
            case ID:
                if (value == null) {
                    unsetId();
                } else {
                    setId((java.lang.Byte) value);
                }
                break;

            case NAME:
                if (value == null) {
                    unsetName();
                } else {
                    setName((java.lang.String) value);
                }
                break;

            case AGE:
                if (value == null) {
                    unsetAge();
                } else {
                    setAge((java.lang.Short) value);
                }
                break;

            case BIRTH_DAY:
                if (value == null) {
                    unsetBirth_day();
                } else {
                    setBirth_day((Date) value);
                }
                break;

            case IS_DELETE:
                if (value == null) {
                    unsetIs_delete();
                } else {
                    setIs_delete((java.lang.Boolean) value);
                }
                break;

            case CAR:
                if (value == null) {
                    unsetCar();
                } else {
                    setCar((java.util.List<java.lang.String>) value);
                }
                break;

            case PHONE_NUMBER:
                if (value == null) {
                    unsetPhone_number();
                } else {
                    setPhone_number((java.util.Set<java.lang.Long>) value);
                }
                break;

        }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case ID:
                return getId();

            case NAME:
                return getName();

            case AGE:
                return getAge();

            case BIRTH_DAY:
                return getBirth_day();

            case IS_DELETE:
                return isIs_delete();

            case CAR:
                return getCar();

            case PHONE_NUMBER:
                return getPhone_number();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case ID:
                return isSetId();
            case NAME:
                return isSetName();
            case AGE:
                return isSetAge();
            case BIRTH_DAY:
                return isSetBirth_day();
            case IS_DELETE:
                return isSetIs_delete();
            case CAR:
                return isSetCar();
            case PHONE_NUMBER:
                return isSetPhone_number();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof Person)
            return this.equals((Person) that);
        return false;
    }

    public boolean equals(Person that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_id = true;
        boolean that_present_id = true;
        if (this_present_id || that_present_id) {
            if (!(this_present_id && that_present_id))
                return false;
            if (this.id != that.id)
                return false;
        }

        boolean this_present_name = true && this.isSetName();
        boolean that_present_name = true && that.isSetName();
        if (this_present_name || that_present_name) {
            if (!(this_present_name && that_present_name))
                return false;
            if (!this.name.equals(that.name))
                return false;
        }

        boolean this_present_age = true && this.isSetAge();
        boolean that_present_age = true && that.isSetAge();
        if (this_present_age || that_present_age) {
            if (!(this_present_age && that_present_age))
                return false;
            if (this.age != that.age)
                return false;
        }

        boolean this_present_birth_day = true && this.isSetBirth_day();
        boolean that_present_birth_day = true && that.isSetBirth_day();
        if (this_present_birth_day || that_present_birth_day) {
            if (!(this_present_birth_day && that_present_birth_day))
                return false;
            if (!this.birth_day.equals(that.birth_day))
                return false;
        }

        boolean this_present_is_delete = true && this.isSetIs_delete();
        boolean that_present_is_delete = true && that.isSetIs_delete();
        if (this_present_is_delete || that_present_is_delete) {
            if (!(this_present_is_delete && that_present_is_delete))
                return false;
            if (this.is_delete != that.is_delete)
                return false;
        }

        boolean this_present_car = true && this.isSetCar();
        boolean that_present_car = true && that.isSetCar();
        if (this_present_car || that_present_car) {
            if (!(this_present_car && that_present_car))
                return false;
            if (!this.car.equals(that.car))
                return false;
        }

        boolean this_present_phone_number = true && this.isSetPhone_number();
        boolean that_present_phone_number = true && that.isSetPhone_number();
        if (this_present_phone_number || that_present_phone_number) {
            if (!(this_present_phone_number && that_present_phone_number))
                return false;
            if (!this.phone_number.equals(that.phone_number))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + (int) (id);

        hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
        if (isSetName())
            hashCode = hashCode * 8191 + name.hashCode();

        hashCode = hashCode * 8191 + ((isSetAge()) ? 131071 : 524287);
        if (isSetAge())
            hashCode = hashCode * 8191 + age;

        hashCode = hashCode * 8191 + ((isSetBirth_day()) ? 131071 : 524287);
        if (isSetBirth_day())
            hashCode = hashCode * 8191 + birth_day.hashCode();

        hashCode = hashCode * 8191 + ((isSetIs_delete()) ? 131071 : 524287);
        if (isSetIs_delete())
            hashCode = hashCode * 8191 + ((is_delete) ? 131071 : 524287);

        hashCode = hashCode * 8191 + ((isSetCar()) ? 131071 : 524287);
        if (isSetCar())
            hashCode = hashCode * 8191 + car.hashCode();

        hashCode = hashCode * 8191 + ((isSetPhone_number()) ? 131071 : 524287);
        if (isSetPhone_number())
            hashCode = hashCode * 8191 + phone_number.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(Person other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetName()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetAge()).compareTo(other.isSetAge());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetAge()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.age, other.age);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetBirth_day()).compareTo(other.isSetBirth_day());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetBirth_day()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.birth_day, other.birth_day);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIs_delete()).compareTo(other.isSetIs_delete());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIs_delete()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_delete, other.is_delete);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCar()).compareTo(other.isSetCar());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCar()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.car, other.car);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetPhone_number()).compareTo(other.isSetPhone_number());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetPhone_number()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone_number, other.phone_number);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("Person(");
        boolean first = true;

        sb.append("id:");
        sb.append(this.id);
        first = false;
        if (isSetName()) {
            if (!first) sb.append(", ");
            sb.append("name:");
            if (this.name == null) {
                sb.append("null");
            } else {
                sb.append(this.name);
            }
            first = false;
        }
        if (isSetAge()) {
            if (!first) sb.append(", ");
            sb.append("age:");
            sb.append(this.age);
            first = false;
        }
        if (isSetBirth_day()) {
            if (!first) sb.append(", ");
            sb.append("birth_day:");
            if (this.birth_day == null) {
                sb.append("null");
            } else {
                sb.append(this.birth_day);
            }
            first = false;
        }
        if (isSetIs_delete()) {
            if (!first) sb.append(", ");
            sb.append("is_delete:");
            sb.append(this.is_delete);
            first = false;
        }
        if (isSetCar()) {
            if (!first) sb.append(", ");
            sb.append("car:");
            if (this.car == null) {
                sb.append("null");
            } else {
                sb.append(this.car);
            }
            first = false;
        }
        if (isSetPhone_number()) {
            if (!first) sb.append(", ");
            sb.append("phone_number:");
            if (this.phone_number == null) {
                sb.append("null");
            } else {
                sb.append(this.phone_number);
            }
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // alas, we cannot check 'id' because it's a primitive and you chose the non-beans generator.
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class PersonStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public PersonStandardScheme getScheme() {
            return new PersonStandardScheme();
        }
    }

    private static class PersonStandardScheme extends org.apache.thrift.scheme.StandardScheme<Person> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, Person struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true) {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
                            struct.id = iprot.readByte();
                            struct.setIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.name = iprot.readString();
                            struct.setNameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // AGE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.age = iprot.readI16();
                            struct.setAgeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // BIRTH_DAY
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                            struct.birth_day = new Date();
                            struct.birth_day.read(iprot);
                            struct.setBirth_dayIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // IS_DELETE
                        if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                            struct.is_delete = iprot.readBool();
                            struct.setIs_deleteIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // CAR
                        if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                            {
                                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                                struct.car = new java.util.ArrayList<java.lang.String>(_list0.size);
                                @org.apache.thrift.annotation.Nullable java.lang.String _elem1;
                                for (int _i2 = 0; _i2 < _list0.size; ++_i2) {
                                    _elem1 = iprot.readString();
                                    struct.car.add(_elem1);
                                }
                                iprot.readListEnd();
                            }
                            struct.setCarIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // PHONE_NUMBER
                        if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
                            {
                                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                                struct.phone_number = new java.util.HashSet<java.lang.Long>(2 * _set3.size);
                                long _elem4;
                                for (int _i5 = 0; _i5 < _set3.size; ++_i5) {
                                    _elem4 = iprot.readI64();
                                    struct.phone_number.add(_elem4);
                                }
                                iprot.readSetEnd();
                            }
                            struct.setPhone_numberIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            if (!struct.isSetId()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'id' was not found in serialized data! Struct: " + toString());
            }
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, Person struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            oprot.writeFieldBegin(ID_FIELD_DESC);
            oprot.writeByte(struct.id);
            oprot.writeFieldEnd();
            if (struct.name != null) {
                if (struct.isSetName()) {
                    oprot.writeFieldBegin(NAME_FIELD_DESC);
                    oprot.writeString(struct.name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetAge()) {
                oprot.writeFieldBegin(AGE_FIELD_DESC);
                oprot.writeI16(struct.age);
                oprot.writeFieldEnd();
            }
            if (struct.birth_day != null) {
                if (struct.isSetBirth_day()) {
                    oprot.writeFieldBegin(BIRTH_DAY_FIELD_DESC);
                    struct.birth_day.write(oprot);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetIs_delete()) {
                oprot.writeFieldBegin(IS_DELETE_FIELD_DESC);
                oprot.writeBool(struct.is_delete);
                oprot.writeFieldEnd();
            }
            if (struct.car != null) {
                if (struct.isSetCar()) {
                    oprot.writeFieldBegin(CAR_FIELD_DESC);
                    {
                        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.car.size()));
                        for (java.lang.String _iter6 : struct.car) {
                            oprot.writeString(_iter6);
                        }
                        oprot.writeListEnd();
                    }
                    oprot.writeFieldEnd();
                }
            }
            if (struct.phone_number != null) {
                if (struct.isSetPhone_number()) {
                    oprot.writeFieldBegin(PHONE_NUMBER_FIELD_DESC);
                    {
                        oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, struct.phone_number.size()));
                        for (long _iter7 : struct.phone_number) {
                            oprot.writeI64(_iter7);
                        }
                        oprot.writeSetEnd();
                    }
                    oprot.writeFieldEnd();
                }
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class PersonTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public PersonTupleScheme getScheme() {
            return new PersonTupleScheme();
        }
    }

    private static class PersonTupleScheme extends org.apache.thrift.scheme.TupleScheme<Person> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, Person struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            oprot.writeByte(struct.id);
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetName()) {
                optionals.set(0);
            }
            if (struct.isSetAge()) {
                optionals.set(1);
            }
            if (struct.isSetBirth_day()) {
                optionals.set(2);
            }
            if (struct.isSetIs_delete()) {
                optionals.set(3);
            }
            if (struct.isSetCar()) {
                optionals.set(4);
            }
            if (struct.isSetPhone_number()) {
                optionals.set(5);
            }
            oprot.writeBitSet(optionals, 6);
            if (struct.isSetName()) {
                oprot.writeString(struct.name);
            }
            if (struct.isSetAge()) {
                oprot.writeI16(struct.age);
            }
            if (struct.isSetBirth_day()) {
                struct.birth_day.write(oprot);
            }
            if (struct.isSetIs_delete()) {
                oprot.writeBool(struct.is_delete);
            }
            if (struct.isSetCar()) {
                {
                    oprot.writeI32(struct.car.size());
                    for (java.lang.String _iter8 : struct.car) {
                        oprot.writeString(_iter8);
                    }
                }
            }
            if (struct.isSetPhone_number()) {
                {
                    oprot.writeI32(struct.phone_number.size());
                    for (long _iter9 : struct.phone_number) {
                        oprot.writeI64(_iter9);
                    }
                }
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, Person struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            struct.id = iprot.readByte();
            struct.setIdIsSet(true);
            java.util.BitSet incoming = iprot.readBitSet(6);
            if (incoming.get(0)) {
                struct.name = iprot.readString();
                struct.setNameIsSet(true);
            }
            if (incoming.get(1)) {
                struct.age = iprot.readI16();
                struct.setAgeIsSet(true);
            }
            if (incoming.get(2)) {
                struct.birth_day = new Date();
                struct.birth_day.read(iprot);
                struct.setBirth_dayIsSet(true);
            }
            if (incoming.get(3)) {
                struct.is_delete = iprot.readBool();
                struct.setIs_deleteIsSet(true);
            }
            if (incoming.get(4)) {
                {
                    org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
                    struct.car = new java.util.ArrayList<java.lang.String>(_list10.size);
                    @org.apache.thrift.annotation.Nullable java.lang.String _elem11;
                    for (int _i12 = 0; _i12 < _list10.size; ++_i12) {
                        _elem11 = iprot.readString();
                        struct.car.add(_elem11);
                    }
                }
                struct.setCarIsSet(true);
            }
            if (incoming.get(5)) {
                {
                    org.apache.thrift.protocol.TSet _set13 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, iprot.readI32());
                    struct.phone_number = new java.util.HashSet<java.lang.Long>(2 * _set13.size);
                    long _elem14;
                    for (int _i15 = 0; _i15 < _set13.size; ++_i15) {
                        _elem14 = iprot.readI64();
                        struct.phone_number.add(_elem14);
                    }
                }
                struct.setPhone_numberIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

